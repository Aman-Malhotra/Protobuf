//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: protos/abc.proto

package sample;

@kotlin.jvm.JvmSynthetic
inline fun sample(block: sample.SampleKt.Dsl.() -> Unit): sample.Abc.Sample =
  sample.SampleKt.Dsl._create(sample.Abc.Sample.newBuilder()).apply { block() }._build()
object SampleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: sample.Abc.Sample.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: sample.Abc.Sample.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): sample.Abc.Sample = _builder.build()

    /**
     * <code>string username = 1;</code>
     */
    var username: kotlin.String
      @JvmName("getUsername")
      get() = _builder.getUsername()
      @JvmName("setUsername")
      set(value) {
        _builder.setUsername(value)
      }
    /**
     * <code>string username = 1;</code>
     */
    fun clearUsername() {
      _builder.clearUsername()
    }

    /**
     * <code>string password = 2;</code>
     */
    var password: kotlin.String
      @JvmName("getPassword")
      get() = _builder.getPassword()
      @JvmName("setPassword")
      set(value) {
        _builder.setPassword(value)
      }
    /**
     * <code>string password = 2;</code>
     */
    fun clearPassword() {
      _builder.clearPassword()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun sample.Abc.Sample.copy(block: sample.SampleKt.Dsl.() -> Unit): sample.Abc.Sample =
  sample.SampleKt.Dsl._create(this.toBuilder()).apply { block() }._build()
